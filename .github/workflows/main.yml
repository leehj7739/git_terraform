name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TF_VAR_USERNAME: ${{ secrets.TF_VAR_USERNAME }}
  TF_VAR_PASSWORD: ${{ secrets.TF_VAR_PASSWORD }}
  TF_VAR_TENANT_NAME: ${{ secrets.TF_VAR_TENANT_NAME }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"

    - name: Configure OpenStack credentials
      run: |
        cat > clouds.yaml << EOF
        clouds:
          openstack:
            auth:
              auth_url: https://keystone.sfacspace.com:5000/v3
              username: ${{ env.TF_VAR_USERNAME }}
              password: ${{ env.TF_VAR_PASSWORD }}
              project_name: ${{ env.TF_VAR_TENANT_NAME }}
              user_domain_name: Default
              project_domain_name: Default
            region_name: RegionOne
        EOF
        mkdir -p ~/.config/openstack
        mv clouds.yaml ~/.config/openstack/

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      working-directory: .github/lab-terraform-modules
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: .github/lab-terraform-modules

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: .github/lab-terraform-modules

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      working-directory: .github/lab-terraform-modules
      continue-on-error: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: .github/lab-terraform-modules

    - name: Get Instance IP
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: instance_ip
      run: |
        IP=$(terraform output -raw instance_ip)
        echo "instance_ip=$IP" >> $GITHUB_OUTPUT
      working-directory: .github/lab-terraform-modules

    - name: Check FastAPI Server
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "Waiting for FastAPI server to start..."
        sleep 60  # 서버 시작을 위한 대기 시간
        curl -v http://${{ steps.instance_ip.outputs.instance_ip }}/hello
      working-directory: .github/lab-terraform-modules

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
          #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform\n
          ${process.env.PLAN}
          \`\`\`

          </details>`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: output
          }) 